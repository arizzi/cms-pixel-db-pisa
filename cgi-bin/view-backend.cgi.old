#!/usr/bin/env python
# enable debugging
import sys
import cgitb
from datetime import *
cgitb.enable()
from pixelwebui import *
import re
import cgi
form = cgi.FieldStorage() # instantiate only once!
print "Content-Type: text/plain"
print



objName = form.getfirst('objName', 'empty')
# Avoid script injection escaping the user input
objName = parseObjName(cgi.escape(objName))
import json

sys.path.append("../PixelDB")

from storm.properties import *
from storm.references import *
from storm import *
from PixelDB import *
import random


pdb = PixelDBInterface(operator="webfrontend",center="cern")
pdb.connectToDB()


columns = []
refs = []
i =0 
#objName = "Test_FullModule"
objType = eval(objName)
if re.match("test",objName,flags=re.IGNORECASE) : 
  ID="TEST_ID"
else:
  ID=objName+"_ID"
ID=ID.upper()
table=objType.__storm_table__
keys=objType.__dict__.keys()
for attr in keys:
#    print attr #,type(eval(objName+"."+attr)).__name__,"<br>"
    if  type(eval(objName+"."+attr)) is properties.PropertyColumn or  type(eval(objName+"."+attr)).__name__ == "date"  or  type(eval(objName+"."+attr)).__name__ == "datetime":
#    if  type(eval(objName+"."+attr)) is properties.PropertyColumn :
         columns.append(attr) 
    if  type(eval(objName+"."+attr)) is references.Reference :
         refs.append(attr)
 
columns.sort()
first = form.getfirst("iDisplayStart", "0")
llast = form.getfirst("iDisplayLength", "-1")
first = int(cgi.escape(first))
llast= int(cgi.escape(llast))

last =llast+ first

#if last == -1 : 
#        ob = "objects[%d:]"%first
#else :
#        ob = "objects[%d:%d]"%(first,last)

objects = pdb.store.find(objType)
#,objType.ROC_ID.like(u"%%%s%%"%form.getfirst("sSearch","")) or objType.TRANSFER_ID.like("%%%s%%"%form.getfirst("sSearch","")))
#objects = pdb.store.find(objType ,objType.TRANSFER_ID.like(int(form.getfirst("sSearch",""))))
sortCol = form.getfirst("iSortCol_0","empty")

objString = "objects"

colNames=[]
colNames.append(ID)
for c in columns:
   colNames.append(c)
for r in refs:
   colNames.append(r)

if sortCol != "empty" :
                cols=int(form.getfirst('iSortingCols'))
                if cols > 0 : 
                       sortcol= int(form.getfirst("iSortCol_0"))
                       if form.getfirst('bSortable_%d'%sortcol) == "true" :
                              if form.getfirst("sSortDir_%d"%i) == "asc" :
			          objString = "objects.order_by(%s.%s)"	% (objName,colNames[sortcol])	
			      else:	
			          objString = "objects.order_by(Desc(%s.%s))"	% (objName,colNames[sortcol])	

		sOrder = "ORDER BY  "
	        dosort=0
#	        print cols
		for  i in range (0,cols) :
			sortcol= int(form.getfirst("iSortCol_%d"%i))
#		        print i,sortcol
			if form.getfirst('bSortable_%d'%sortcol) == "true" :
				if dosort !=0 :
					  sOrder+=" , "
				if form.getfirst("sSortDir_%d"%i) == "asc" :
					dosort=1
					sOrder += colNames[sortcol]+" asc "
				else:
					dosort=1
					sOrder += colNames[sortcol]+" desc "
		if dosort ==0 :
			sOrder = ""



#print objString
#searchedObj = []
#for o in eval(objString) :
#   search=""
#   search+=str(getattr(o,ID))
#   for c in columns:
#    v=getattr(o,c)
#    if type(v).__name__ == "unicode" :
#       search+=(v.encode('utf-8'))
#    else :
#       search+="%s"%v
#   if re.match(form.getfirst("sSearch",""),search) :
#      searchedObj.append(o)
import MySQLdb

db = MySQLdb.connect(host="localhost", # your host, usually localhost
                     user="tester", # your username
                      passwd="pixels", # your password
                      db="prod_pixel") # name of the data base

# you must create a Cursor object. It will let
#  you execute all the query you need
cur = db.cursor(MySQLdb.cursors.DictCursor) 

# Use all the SQL you like
colNames = ",".join(columns)
#print colNames
sLimit = ""
if last != -1 :
  sLimit = "LIMIT %d,%d" %(first,llast)


sWhere = ""
sSearch = form.getfirst("sSearch","empty")
escapedSearch = conn.escape_string(sSearch)
if sSearch != empty :
		sWhere = "WHERE (";
		for c in columns :
			if sWhere != "WHERE (":
			   sWhere += " OR "	
			sWhere += "`%s` LIKE '%%%s%%' " % (c,escapedSearch)
		sWhere += ')'
	

cur.execute("SELECT %s FROM %s %s %s %s"% (colNames,table,sWhere,sOrder,sLimit))

# print all the first cell of all the rows


if last == -1 : 
        ob = "objects[%d:]"%first
else :
        ob = "objects[%d:%d]"%(first,last)

output = {}
output["sEcho"] = form.getfirst('sEcho',1)
output["iTotalRecords"] = objects.count()
output["iTotalDisplayRecords"] =  objects.count()
output["aaData"] = []


  

for o in cur.fetchall() :
   row = []
   row.append( o[ID]+"(<a href=viewdetails.cgi?objName="+objName+"&"+ID+"="+o[ID]+">details</a>)")
   for c in columns:
     row.append(o[c])	
   for r in refs:
     row.append("<a href=\"viewdetails.cgi?objName="+objName+"&"+ID+"="+o[ID]+"&ref="+r+"\"> details</a></td>")
   output["aaData"].append(row)

print json.dumps(output)
